[lbgeo]
storage.tmp_dir = /tmp
requests.timeout = 30

[alembic]
sqlalchemy.url = postgresql://rest:rest@localhost/neolight
sqlalchemy.max_overflow = 0
sqlalchemy.pool_size = 20

script_location = alembic

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# max length of characters to apply to the
# "slug" field
#truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; this defaults
# to alembic/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/bar %(here)s/bat alembic/versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

# Begin logging configuration
[loggers]
keys = root, lbgeo, sqlalchemy

[handlers]
keys = file, console

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = file

[logger_lbgeo]
level = DEBUG
handlers =
qualname = lbgeo

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = DEBUG
formatter = generic

[handler_file]
class = handlers.RotatingFileHandler
args = ('log/development.log', 'a', int(20*1024*1024), 10)
level = DEBUG
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
datefmt = %H:%M:%S
# End logging configuration